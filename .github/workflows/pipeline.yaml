name: CI/CD

on:
  push:
    branches:
      - main
      - hml
      - dev
jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install packages
        run: |
          sudo apt-get update && sudo apt-get install -y wget curl yamllint
      - name: filter differences
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }} > .diff-files
          cat .diff-files | grep -v ".github/" | grep .yaml  > .crds-to-apply | true
      - name: test/lint
        run: yamllint .
      
      - name: build artifact
        uses: actions/upload-artifact@master
        with:
          name: build-artifact
          path: .
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: .
      - name: Install CLI
        run: |
          sudo apt-get update && sudo apt-get install -y wget curl yamllint &&
          curl -L https://cli.sensedia.com/2.8.0/ssd-linux-amd64/ssd -o ssd &&
          chmod +x ssd && mv ssd /usr/local/bin
      - name: Configure CLI environment
        run: |
          ssd configure --url ${{ secrets.SENSEDIA_CLI_MANAGER_URL }} --token ${{ secrets.SENSEDIA_CLI_TOKEN  }} -o json
      - name: Apply changed files
        run: |
          echo "Check all newed/changed CRDs to ${{ github.ref_name }}"
          
          echo "Update Environment"
          cat .crds-env-to-apply
          cat .crds-to-apply | grep "environments/main" > .crds-env-to-apply | true
          cat .crds-env-to-apply | xargs -n 1 --no-run-if-empty -t ssd apply -f

          ------------------------------------------------------------------------

          echo "Update Plans"
          cat .crds-to-apply | grep "plan-" > .crds-plan-to-apply | true
          cat .crds-plan-to-apply | xargs -n 1 --no-run-if-empty -t ssd apply -f

          ------------------------------------------------------------------------

          echo "Update Apps"
          cat .crds-to-apply | grep "apps" > .crds-app-to-apply | true
          cat .crds-app-to-apply | xargs -n 1 --no-run-if-empty -t ssd apply -f
          
          ------------------------------------------------------------------------

          echo "Update RestAPI"
          cat .crds-to-apply | grep "restapi-" > .crds-restapi-to-apply | true
          cat .crds-restapi-to-apply | xargs -n 1 --no-run-if-empty -t ssd apply -f

          ------------------------------------------------------------------------

          echo "Update ApiEnvironmentLink"
          cat .crds-to-apply | grep "environment-link/main-" > .crds-appenvlink-to-apply | true
          cat .crds-appenvlink-to-apply | xargs -n 1 --no-run-if-empty -t ssd apply -f

          ------------------------------------------------------------------------

          echo "Deploy APIs"
          cat .crds-to-apply | grep "deployment/main" > .crds-deployment-to-apply | true
          cat .crds-deployment-to-apply | xargs -n 1 --no-run-if-empty -t ssd apply -f
